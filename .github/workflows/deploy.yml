name: Deploy

on:
  pull_request:
    branches:
    - main

env:
  AZURE_FUNCTIONAPP_NAME: moviematchapi
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src'
  AZURE_FUNCTIONAPP_TEST_PATH: './test'
  DOTNET_SDK_VERSION: '3.1.413'
  AZURE_AD_INSTANCE: https://login.microsoftonline.com/

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Deploy infrastructure
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ secrets.AZURE_RG }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./bicep/main.bicep
          parameters: appName=${{ env.AZURE_FUNCTIONAPP_NAME}} userObjectId=${{ secrets.AZURE_USER_OBJECT_ID }} movieDBAccessToken=${{ secrets.MOVIE_DB_ACCESS_TOKEN }} identityInstance=${{ env.AZURE_AD_INSTANCE }} apiApplicationId=${{ secrets.API_APPLICATION_ID }}

      - name: Setup DotNet ${{ env.DOTNET_SDK_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Setup DotNet 6.0.x Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Build
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: Unit test
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_TEST_PATH }}/xunit'
          dotnet test
          popd

      - name: Deploy API to staging
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          slot-name: staging
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

      - name: Run e2e tests against staging
        shell: bash
        env:
          API_APP_NAME: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          WEB_APP_CLIENT_ID: ${{ secrets.WEB_APP_CLIENT_ID }}
          API_SCOPE: ${{ secrets.API_SCOPE }}
          WEB_APP_CLIENT_SECRET: ${{ secrets.WEB_APP_CLIENT_SECRET }}
          AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_TEST_PATH }}/e2e'
          dotnet test
          popd

      - name: Deploy API to production
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
